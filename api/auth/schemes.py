import datetime
import enum
from html import escape as e

from pydantic import BaseModel, ConfigDict

from services.db.enums import UserRole


class Base(BaseModel):
    model_config = ConfigDict(from_attributes=True)

    def dump(self):
        dump = self.model_dump()

        for key, value in dump.items():
            if value is None:
                dump[key] = "–Ω–µ—Ç"
            elif isinstance(value, datetime.datetime):
                dump[key] = value.strftime("%d-%m-%Y %H:%M")
            elif isinstance(value, str):
                dump[key] = e(value)
            elif isinstance(value, enum.Enum):
                dump[key] = value.name

        return dump


class DecryptedRecord(Base):
    id: int
    title: str
    username: str
    password: str
    url: str | None
    comment: str | None
    created_at: datetime.datetime
    updated_at: datetime.datetime

    def html(self) -> str:
        result = (
            "<b>–ü–∞—Ä–æ–ª—å {title}</b>\n\n"
            "üë® –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <code>{username}</code>\n"
            "üîë –ü–∞—Ä–æ–ª—å: <code>{password}</code>\n"
            "üîó –í–µ–±-—Å–∞–π—Ç: {url}\n"
            "üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}\n"
            "üìÖ –°–æ–∑–¥–∞–Ω: {created_at}\n"
            "üìÖ –ò–∑–º–µ–Ω—ë–Ω: {updated_at}\n"
            "üî¢ ID: {id}"
        ).format(**self.dump())

        return result


class User(Base):
    id: int
    first_name: str
    last_name: str | None
    username: str | None
    language_code: str | None
    role: UserRole
    created_at: datetime.datetime
    updated_at: datetime.datetime

    def html(self) -> str:
        result = (
            "<b>{first_name} {last_name}</b>\n\n"
            "üë® –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @{username}\n"
            "üü¢ –†–æ–ª—å: {role}\n"
            "üåç –Ø–∑—ã–∫: {language_code}\n"
            "üìÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: {created_at}\n"
            "üî¢ ID: {id}"
        ).format(**self.dump())

        return result

    def welcome(self) -> str:
        match self.role:
            case UserRole.GUEST:
                return "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –±—ã—Å—Ç—Ä–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–∞—Ä–æ–ª—è–º–∏! üòä "
            case UserRole.USER:
                return "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {first_name} {last_name}! üòä ".format(
                    **self.dump()
                )
            case UserRole.ADMIN:
                return "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, —Å—É–ø–µ—Ä-–∫–æ—Ç {first_name} {last_name}! üòä".format(
                    **self.dump()
                )
            case _:
                raise ValueError(f"Unknown user role: {self.role}")
