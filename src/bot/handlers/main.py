from aiogram import types, Router, F
from aiogram.fsm.context import FSMContext
from arq import ArqRedis

from src.bot.filters import RegisterFilter
from src.bot.fsm import MainGroup
from src.bot.fsm import RecordGroup
from src.bot.handlers.start import suggest
from src.bot.keyboards.main import MAIN_MENU_KB
from src.bot.keyboards.user import PROFILE_KB
from src.bot.middlewares import DatabaseMd

router = Router(name='main')

router.message.middleware(DatabaseMd())
router.callback_query.middleware(DatabaseMd())

router.message.filter(RegisterFilter())
router.callback_query.filter(RegisterFilter())


@router.message(MainGroup.viewing_profile, F.text == '–ù–∞–∑–∞–¥ ‚óÄÔ∏è')
async def show_main_menu(message: types.Message, state: FSMContext) -> None:
    await state.clear()

    await message.answer(
        '–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ üîΩ',
        reply_markup=MAIN_MENU_KB
    )

    await state.set_state(MainGroup.viewing_main_menu)


@router.message(MainGroup.viewing_main_menu, F.text == '–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å üîë')
@router.message(MainGroup.viewing_all_records, F.text == '–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å üîë')
@router.message(RecordGroup.viewing_record, F.text == '–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å üîë')
async def suggest_password(message: types.Message, arq_redis: ArqRedis) -> None:
    await suggest(message, arq_redis)


@router.message(MainGroup.viewing_main_menu, F.text == '–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å üë®')
@router.message(MainGroup.viewing_all_records, F.text == '–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å üë®')
@router.message(RecordGroup.viewing_record, F.text == '–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å üë®')
async def show_profile(message: types.Message, state: FSMContext) -> None:
    await message.answer(
        text='–í—ã –≤ –º–µ–Ω—é –ø—Ä–æ—Ñ–∏–ª—è. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ üîΩ',
        reply_markup=PROFILE_KB
    )
    await state.set_state(MainGroup.viewing_profile)
