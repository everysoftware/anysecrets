from aiogram import Router, F, types
from aiogram.fsm.context import FSMContext

from src.bot.fsm import MainGroup, ProfileGroup
from src.bot.handlers.user.verify_id import id_verification_request
from src.bot.keyboards.service import YESNO_KB
from src.bot.utils.callback_manager import manager
from src.db import Database

router = Router()


@router.message(MainGroup.viewing_profile, F.text == '–£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç ‚ùå')
async def delete_user_request(message: types.Message, state: FSMContext) -> None:
    await id_verification_request(message, state, delete_account_yesno)


@manager.callback
async def delete_account_yesno(message: types.Message, state: FSMContext) -> None:
    await message.answer(
        '–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç? –í—Å–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –ø–∞—Ä–æ–ª–∏ –±—É–¥—É—Ç –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ –ø–æ—Ç–µ—Ä—è–Ω—ã!',
        reply_markup=YESNO_KB
    )
    await state.set_state(ProfileGroup.deleting_account)


@router.callback_query(ProfileGroup.deleting_account, F.data == 'yes')
async def delete_account_yes(
        call: types.CallbackQuery,
        state: FSMContext,
        db: Database
) -> None:
    async with db.session.begin():
        user = await db.user.get(call.from_user.id)
        await db.user.delete(user)

    await state.clear()
    await call.message.answer(
        '–ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω ‚úÖ\n\n'
        '–ï—Å–ª–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è, –ø–∏—à–∏—Ç–µ /start. –ú—ã –≤—Å–µ–≥–¥–∞ –±—É–¥–µ–º —Ä–∞–¥—ã –í–∞—Å –≤–∏–¥–µ—Ç—å! ü§ó',
        reply_markup=types.ReplyKeyboardRemove()
    )
    await call.answer()


@router.callback_query(ProfileGroup.deleting_account, F.data == 'no')
async def delete_account_no(call: types.CallbackQuery, state: FSMContext) -> None:
    await call.message.answer('–£–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ ‚ùå')
    await state.set_state(MainGroup.viewing_profile)
    await call.answer()
