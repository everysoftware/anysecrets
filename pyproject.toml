[tool.poetry]
name = "app"
version = "0.1.0"
description = ""
authors = ["Ivan Stasevich <pravitel2015ify@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.111.0"
gunicorn = "^22.0.0"
sqlalchemy = "^2.0.30"
cryptography = "^42.0.7"
alembic = "^1.13.1"
fastapi-users = { extras = ["sqlalchemy"], version = "^13.0.0" }
pydantic-settings = "^2.3.0"
asyncpg = "^0.29.0"
uuid-utils = "^0.10.0"
aiohttp = "^3.11.12"
humanize = "^4.12.1"


[tool.poetry.group.dev.dependencies]
mypy = "^1.10.0"
ruff = "^0.4.3"
pre-commit = "^3.7.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py312"
output-format = "concise"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "A",  # shadowed builtins
    "RUF"  # ruff
]
ignore = [
    "E501",  # line too long, handled by ruff
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191",  # indentation contains tabs
]

[tool.ruff.format]
docstring-code-format = true

[tool.mypy]
strict = true
pretty = true
plugins = "pydantic.mypy"

[[tool.mypy.overrides]]
module = "*.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
