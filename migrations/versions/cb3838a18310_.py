"""empty message

Revision ID: cb3838a18310
Revises: b67054387a3b
Create Date: 2023-11-11 17:24:32.677351

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cb3838a18310'
down_revision: Union[str, None] = 'b67054387a3b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('comments', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.alter_column('comments', 'text',
                    existing_type=sa.VARCHAR(length=256),
                    nullable=False)
    op.add_column('records', sa.Column('created_at', sa.DateTime(), nullable=True))
    # op.add_column('users', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.alter_column('users', 'reg_date',
                    new_column_name='created_at', type_=sa.DateTime())
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.add_column('users', sa.Column('reg_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    # op.drop_column('users', 'created_at')
    op.alter_column('users', 'created_at',
                    new_column_name='reg_date', type_=postgresql.TIMESTAMP())
    op.drop_column('records', 'created_at')
    op.alter_column('comments', 'text',
                    existing_type=sa.VARCHAR(length=256),
                    nullable=True)
    op.drop_column('comments', 'created_at')
    # ### end Alembic commands ###
