"""recoded in sqlalchemy2 style

Revision ID: e451cde8c2b1
Revises: 003f16bad17a
Create Date: 2023-10-23 22:49:16.738069

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e451cde8c2b1'
down_revision: Union[str, None] = '003f16bad17a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('comments', 'text',
                    existing_type=sa.VARCHAR(length=512),
                    type_=sa.String(length=256),
                    nullable=False)
    op.alter_column('records', 'user_id',
                    existing_type=sa.BIGINT(),
                    nullable=False)
    op.alter_column('records', 'username',
                    existing_type=postgresql.BYTEA(),
                    nullable=False)
    op.alter_column('records', 'password_',
                    existing_type=postgresql.BYTEA(),
                    nullable=False)
    op.alter_column('users', 'first_name',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    op.alter_column('users', 'last_name',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    op.alter_column('users', 'language_code',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    op.alter_column('users', 'username',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    # op.drop_constraint('users_username_key', 'users', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_unique_constraint('users_username_key', 'users', ['username'])
    op.alter_column('users', 'username',
                    existing_type=sa.VARCHAR(),
                    nullable=True)
    op.alter_column('users', 'language_code',
                    existing_type=sa.VARCHAR(),
                    nullable=True)
    op.alter_column('users', 'last_name',
                    existing_type=sa.VARCHAR(),
                    nullable=True)
    op.alter_column('users', 'first_name',
                    existing_type=sa.VARCHAR(),
                    nullable=True)
    op.alter_column('records', 'password_',
                    existing_type=postgresql.BYTEA(),
                    nullable=True)
    op.alter_column('records', 'username',
                    existing_type=postgresql.BYTEA(),
                    nullable=True)
    op.alter_column('records', 'user_id',
                    existing_type=sa.BIGINT(),
                    nullable=True)
    op.alter_column('comments', 'text',
                    existing_type=sa.String(length=256),
                    type_=sa.VARCHAR(length=512),
                    nullable=True)
    # ### end Alembic commands ###
